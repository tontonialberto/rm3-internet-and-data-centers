ip link
ip address
ip address add <ip address>/<mask> dev <interface>

ip route // ispeziona tabella di routing (data plane)
ip route add default via <router address> dev <interface>
ip route add <network address>/<mask> via <router address> dev <interface>

tcpdump -tenni <interface>

traceroute <dst ip address>

----

FRR

Files da includere sempre:
/etc/frr/daemons
/etc/frr/vtysh.conf

systemctl start frr

vtysh.conf
    service integrated-vtysh-config

vtysh

    show ip route

RIP:

frr.conf (rip)
    router rip
    redistribute connected
    network <network address>/<mask> // invia dati multicast RIP su tutte le interfacce che matchano questo prefisso
    route <network address>/<mask> // iniettare rotta statica in rip (bisogna anche mettere la default usando "ip route" da bash)

OSPF:
    router ospf
    network <network address>/<mask> area 0.0.0.0 // parla OSPF su tutte le interfacce che matchano il prefisso. Area OSPF 0.
    redistribute connected

    interface <interface>
    ospf cost <number>

REDISTRIBUIRE ROTTE BGP AI ROUTER INTERNI:
    sul router di frontiera che parla anche rip:
        redistribute bgp

show ip ospf interface
show ip ospf database
show ip ospf database router
show ip ospf database network

------

APACHE2

systemctl start apache2

i file statici vanno in /var/www/html


------

BGP

debug bgp keepalives
debug bgp updates in
debug bgp updates out

### IMPORTANTISSIMO!!!! ###
    router bgp <my as number>

Peering setup:
    neighbor <ip> remote-as <asn>
    neighbor <ip> description <text>

Per verificare che funziona:
- tail -f /var/log/frr/frr.log e cerca i messaggi BGP
- show ip bgp summary (vedi messaggi ricevuti e inviati)
- show ip bgp neighbors (fornisce più dettagli)
- show ip bgp (dovrebbero esserci 0 prefissi)

show ip bgp <network address> (mostra gli annunci di quella network e la best route selezionata)

Annunci:
    network <network address>/<netmask>
Nota:
    posso annunciare solo rotte che sono nella mia kernel routing table.
    Altrimenti posso usare (!!CONTESTUALI BGP!!): 
        no bgp network import-check
    
    Senza filtri "in", non accetto niente in ingresso.
    Senza filtri "out", non annuncio niente.
    Se non ho filtri in/out posso usare (contestuale bgp):
        no bgp ebgp-requires-policy

Filtraggio per prefisso:
    neighbor <ip> prefix-list <pl-name> in
    ip prefix-list <pl-name> [seq <N>] permit <network addr>/<netmask> [deny any]
Nota: metti prima le più specifiche e poi le più generali (any).
    Per ogni rotta, viene applicata la prima regola applicabile.

Filtraggio per as-path:
    neighbor <ip> filter-list myACL in
    ip as-path access-list myACL permit ^200_300
-----


RISORSE:
https://kathara-lab-generator-gui.vercel.app/
https://github.com/tontonialberto/rm3-internet-and-data-centers